// Code generated by furo furo. DO NOT EDIT.

syntax = "proto3";
package sample;
option go_package = "github.com/thesse1/sample-specs/dist/pb/sample;samplepb";
option java_multiple_files = true;
option java_outer_classname = "SampleserviceProto";
option java_package = "com.example.tutorial.sample";

import "furo/signatures/signatures.proto";
import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/field_mask.proto";
import "sample/reqmsgs.proto";
import "sample/sample.proto";


// Services for handling Sample.
// 
service Samples {

  // Creates a Sample.
  rpc CreateSample (CreateSampleRequest) returns (furo.signatures.EmptyEntity){
	//Create: POST /sample sample.Sample , furo.signatures.EmptyEntity #Creates a Sample.
	option (google.api.http) = {
		post: "/sample"
		body: "body"
	};
  }

  // Delete a Sample
  rpc DeleteSample (DeleteSampleRequest) returns (google.protobuf.Empty){
	//Delete: DELETE /sample/{smp} google.protobuf.Empty , google.protobuf.Empty #Delete a Sample
	option (google.api.http) = {
		delete: "/sample/{smp}"
		
	};
  }

  // Returns a single Sample.
  rpc GetSample (GetSampleRequest) returns (sample.SampleEntity){
	//Get: GET /sample/{smp} google.protobuf.Empty , sample.SampleEntity #Returns a single Sample.
	option (google.api.http) = {
		get: "/sample/{smp}"
		
	};
  }

  // Returns a list of Samples.
  rpc ListSamples (ListSamplesRequest) returns (sample.SampleCollection){
	//List: GET /sample google.protobuf.Empty , sample.SampleCollection #Returns a list of Samples.
	option (google.api.http) = {
		get: "/sample"
		
	};
  }

  // Update an existing  Sample. PATCH is also supported
  rpc UpdateSample (UpdateSampleRequest) returns (sample.SampleEntity){
	//Update: PUT /sample/{smp} sample.Sample , sample.SampleEntity #Update an existing  Sample. PATCH is also supported
	option (google.api.http) = {
		put: "/sample/{smp}"
		body: "body"
		additional_bindings {
            patch: "/sample/{smp}"
            body: "body"
        }
	};
  }

}


